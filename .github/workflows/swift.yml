name: build_test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_test:
    timeout-minutes: 30
    strategy:
      # If macos-latest fails, we still don't want to cancel ubuntu-latest or the other way around.
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        kind: [debug]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 25-nightly
      - name: Install swiftly
        run: curl -O https://download.swift.org/swiftly/linux/swiftly-$(uname -m).tar.gz
             tar zxf swiftly-$(uname -m).tar.gz
             ./swiftly init --quiet-shell-followup --skip-install
             rm swiftly-$(uname -m).tar.gz
             export PATH="$HOME/.local/share/swiftly/bin/:${PATH}"
      - name: Install swift
        run: swiftly install 6.1.2 && swiftly use 6.1.2
      - name: Swift Version
        run: swift --version
      - uses: actions/checkout@v2
      - name: Build
        run: swift build -c ${{ matrix.kind }} -v
      - name: Install protobuf
        # Install protoc so the presubmit can also validate the generated *.pb.swift files.
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.kind == 'debug' }}
        run: sudo apt install -y protobuf-compiler
      - name: Run presubmit checks
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.kind == 'debug' }}
        run: python3 Tools/presubmit.py
      - name: Run tests with Node.js
        run: swift test -c ${{ matrix.kind }} -v
      - name: Install jsvu
        run: npm install jsvu -g
      - name: Install d8
        run: jsvu --os=default --engines=v8
      - name: Run tests with d8
        run: FUZZILLI_TEST_SHELL=~/.jsvu/engines/v8/v8 swift test -c ${{ matrix.kind }} -v
